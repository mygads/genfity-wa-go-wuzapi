services:
  genfity-wa:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: genfity-wa
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}
      - PORT=${PORT}
      - TZ=${TZ}
      - WUZAPI_ADMIN_TOKEN=${WUZAPI_ADMIN_TOKEN}
      - WEBHOOK_FORMAT=${WEBHOOK_FORMAT}
      - SESSION_DEVICE_NAME=${SESSION_DEVICE_NAME}
      - GIN_MODE=${GIN_MODE}
      - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - "${PORT}:${PORT}"
    networks:
      - genfity-network
    depends_on:
      - db-check
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--no-verbose", "--tries=1", "--spider", "http://localhost:${PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db-check:
    image: postgres:16
    container_name: genfity-db-check
    environment:
      - PGHOST=${DB_HOST}
      - PGPORT=${DB_PORT}
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASSWORD}
      - PGDATABASE=${DB_NAME}
    networks:
      - genfity-network
    command: >
      sh -c "
        echo 'Checking database connection...'
        until pg_isready -h ${DB_HOST} -p ${DB_PORT} -U ${DB_USER} -d postgres; do
          echo 'Waiting for PostgreSQL server...'
          sleep 2
        done
        echo 'PostgreSQL server is ready!'
        
        echo 'Checking if database exists...'
        if psql -h ${DB_HOST} -U ${DB_USER} -d postgres -lqt | cut -d \\| -f 1 | grep -qw ${DB_NAME}; then
          echo 'Database ${DB_NAME} exists'
        else
          echo 'Database ${DB_NAME} does not exist, creating...'
          psql -h ${DB_HOST} -U ${DB_USER} -d postgres -c 'CREATE DATABASE ${DB_NAME};'
          echo 'Database ${DB_NAME} created'
        fi
        
        echo 'Database check completed successfully'
      "

networks:
  genfity-network:
    external: true
    name: server_genfity-network

# ==========================================
# Usage:
#   Copy .env.example to .env and configure
#   Then run: docker compose up -d
# ==========================================